Source: liblog-dispatch-perl
Maintainer: Debian Perl Group <pkg-perl-maintainers@lists.alioth.debian.org>
Uploaders: Ernesto Hern√°ndez-Novich (USB) <emhn@usb.ve>,
           Florian Schlichting <fsfs@debian.org>,
           Angel Abad <angel@debian.org>
Section: perl
Testsuite: autopkgtest-pkg-perl
Priority: optional
Build-Depends: debhelper-compat (= 13)
Build-Depends-Indep: libdevel-globaldestruction-perl <!nocheck>,
                     libdist-checkconflicts-perl <!nocheck>,
                     libipc-run3-perl <!nocheck>,
                     libjson-pp-perl <!nocheck>,
                     libmail-sendmail-perl <!nocheck>,
                     libmailtools-perl <!nocheck>,
                     libmime-lite-perl <!nocheck>,
                     libmodule-runtime-perl <!nocheck>,
                     libnamespace-autoclean-perl <!nocheck>,
                     libparams-validationcompiler-perl <!nocheck>,
                     libspecio-perl <!nocheck>,
                     libtest-fatal-perl <!nocheck>,
                     libtest-needs-perl <!nocheck>,
                     libtest-requires-perl <!nocheck>,
                     libtry-tiny-perl <!nocheck>,
                     perl
Standards-Version: 4.5.0
Vcs-Browser: https://salsa.debian.org/perl-team/modules/packages/liblog-dispatch-perl
Vcs-Git: https://salsa.debian.org/perl-team/modules/packages/liblog-dispatch-perl.git
Homepage: https://metacpan.org/release/Log-Dispatch
Rules-Requires-Root: no

Package: liblog-dispatch-perl
Architecture: all
Depends: ${misc:Depends},
         ${perl:Depends},
         libdevel-globaldestruction-perl,
         libdist-checkconflicts-perl,
         libmodule-runtime-perl,
         libnamespace-autoclean-perl,
         libparams-validationcompiler-perl,
         libspecio-perl,
         libtry-tiny-perl
Recommends: libmail-sendmail-perl,
            libmailtools-perl,
            libmime-lite-perl
Description: message dispatcher to multiple Log::Dispatch::* objects
 Log::Dispatch is a collection of Perl modules useful for logging messages to
 multiple outputs, each of which can have a minimum and maximum log level. It
 is designed to be easily subclassed, both for creating a new dispatcher
 object and particularly for creating new outputs.
 .
 It also allows both global (dispatcher level) and local (logging object)
 message formatting callbacks which allows greater flexibility and reduces
 the need for subclassing.
